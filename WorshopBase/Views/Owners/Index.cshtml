@using Microsoft.AspNetCore.Identity
@using WorshopBase.Models

@model WorshopBase.ViewModels.OwnersViewModels.OwnersListViewModel
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@{
    ViewData["Title"] = "Управление владельцами автомобилей";
}

<h2>Управление владельцами автомобилей</h2>

<table class="table table-hover table-bordered text-center" id="tblemps">
    <thead>
        <tr>
            <th style="text-align: center;">
                Номер водительских прав
            </th>
            <th style="text-align: center;">
                Фамилия
            </th>
            <th style="text-align: center;">
                Адрес
            </th>
            <th style="text-align: center;">
                Телефон
            </th>
            @if (await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "admin"))
            {
                <th style="text-align: center;">
                    <a class="btn btn-primary" asp-action="Create">Добавить владельца</a>
                </th>
            }
            @if (await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "user"))
            {
                <th style="text-align: center;">
                    Автомобили
                </th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Owners)
        {
            <tr>
                <td>
                    @Html.HiddenFor(modelitem => item.Id)
                    <span id="employeename">@item.driverLicense</span>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.fioOwner)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.adress)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.phone)
                </td>
                @if (await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "admin"))
                {
                    <td>
                        <form asp-action="Delete" asp-route-id="@item.Id" method="post">
                            <a class="btn btn-sm btn-warning" asp-action="Cars" asp-route-id="@item.Id">Автомобили</a>
                            <a class="btn btn-sm btn-success glyphicon glyphicon-pencil" asp-action="Edit" asp-route-id="@item.Id"></a>
                            <button type="submit" class="btn btn-sm btn-danger glyphicon glyphicon-trash"></button>
                        </form>
                    </td>
                }
                @if (await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "user"))
                {
                    <td>
                        <a class="btn btn-sm btn-warning" asp-action="Cars" asp-route-id="@item.Id">Автомобили</a>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

@if (Model.PageViewModel.HasPreviousPage)
{
    <a asp-action="Index"
       asp-route-page="@(Model.PageViewModel.PageNumber - 1)"
       class="btn btn-default btn">
        <i class="glyphicon glyphicon-chevron-left"></i>
        Назад
    </a>
}
@if (Model.PageViewModel.HasNextPage)
{
    <a asp-action="Index"
       asp-route-page="@(Model.PageViewModel.PageNumber + 1)"
       class="btn btn-default btn">
        Вперед
        <i class="glyphicon glyphicon-chevron-right"></i>
    </a>
}
@if (Model.PageViewModel.TotalPages > 1)
{
    <br />
    <b>Страница @Model.PageViewModel.PageNumber из @Model.PageViewModel.TotalPages</b>
}

