// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using WorshopBase.Models;

namespace WorkshopBase.Migrations
{
    [DbContext(typeof(WorkshopContext))]
    [Migration("20181012090642_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WorshopBase.Models.Breakdown", b =>
                {
                    b.Property<int>("breakdownID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("orderID");

                    b.Property<int>("partID");

                    b.Property<int?>("workerID");

                    b.HasKey("breakdownID");

                    b.HasIndex("orderID");

                    b.HasIndex("partID");

                    b.HasIndex("workerID");

                    b.ToTable("Breakdowns");
                });

            modelBuilder.Entity("WorshopBase.Models.Car", b =>
                {
                    b.Property<int>("carID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("bodyNumber");

                    b.Property<string>("colour");

                    b.Property<int>("engineNumber");

                    b.Property<string>("model");

                    b.Property<int>("ownerID");

                    b.Property<string>("stateNumber");

                    b.Property<int>("vis");

                    b.Property<int>("yearOfIssue");

                    b.HasKey("carID");

                    b.HasIndex("ownerID");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("WorshopBase.Models.Order", b =>
                {
                    b.Property<int>("orderID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("carID");

                    b.Property<DateTime>("dateCompletion");

                    b.Property<DateTime>("dateReceipt");

                    b.Property<int>("workerID");

                    b.HasKey("orderID");

                    b.HasIndex("carID");

                    b.HasIndex("workerID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("WorshopBase.Models.Owner", b =>
                {
                    b.Property<int>("ownerID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("adress");

                    b.Property<int>("driverLicense");

                    b.Property<string>("fioOwner");

                    b.Property<int>("phone");

                    b.HasKey("ownerID");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("WorshopBase.Models.Part", b =>
                {
                    b.Property<int>("partID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("descriptionPart");

                    b.Property<string>("partName");

                    b.Property<decimal>("price");

                    b.HasKey("partID");

                    b.ToTable("Parts");
                });

            modelBuilder.Entity("WorshopBase.Models.Post", b =>
                {
                    b.Property<int>("postID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("descriptionPost");

                    b.Property<string>("postName");

                    b.HasKey("postID");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("WorshopBase.Models.Worker", b =>
                {
                    b.Property<int>("workerID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("dateOfDismissal");

                    b.Property<DateTime>("dateOfEmployment");

                    b.Property<string>("fioWorker");

                    b.Property<int>("postID");

                    b.Property<decimal>("salary");

                    b.HasKey("workerID");

                    b.HasIndex("postID");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("WorshopBase.Models.Breakdown", b =>
                {
                    b.HasOne("WorshopBase.Models.Order", "Order")
                        .WithMany("Breakdowns")
                        .HasForeignKey("orderID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WorshopBase.Models.Part", "Part")
                        .WithMany("Breakdowns")
                        .HasForeignKey("partID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WorshopBase.Models.Worker", "Worker")
                        .WithMany("Breakdowns")
                        .HasForeignKey("workerID");
                });

            modelBuilder.Entity("WorshopBase.Models.Car", b =>
                {
                    b.HasOne("WorshopBase.Models.Owner", "Owner")
                        .WithMany("Cars")
                        .HasForeignKey("ownerID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WorshopBase.Models.Order", b =>
                {
                    b.HasOne("WorshopBase.Models.Car", "Car")
                        .WithMany("Orders")
                        .HasForeignKey("carID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WorshopBase.Models.Worker", "Worker")
                        .WithMany("Orders")
                        .HasForeignKey("workerID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WorshopBase.Models.Worker", b =>
                {
                    b.HasOne("WorshopBase.Models.Post", "Post")
                        .WithMany("Workers")
                        .HasForeignKey("postID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
