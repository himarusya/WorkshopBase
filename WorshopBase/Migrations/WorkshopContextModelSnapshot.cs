// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using WorshopBase.Models;

namespace WorshopBase.Migrations
{
    [DbContext(typeof(WorkshopContext))]
    partial class WorkshopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WorshopBase.Models.Car", b =>
                {
                    b.Property<int>("carID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("bodyNumber");

                    b.Property<string>("colour");

                    b.Property<int>("engineNumber");

                    b.Property<string>("model");

                    b.Property<int>("ownerID");

                    b.Property<int>("vis");

                    b.Property<DateTime>("yearOfIssue");

                    b.HasKey("carID");

                    b.HasIndex("ownerID");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("WorshopBase.Models.Mechanic", b =>
                {
                    b.Property<int>("mechanicID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("experience");

                    b.Property<string>("fioMechanic");

                    b.Property<string>("qualification");

                    b.Property<decimal>("salary");

                    b.HasKey("mechanicID");

                    b.ToTable("Mechanics");
                });

            modelBuilder.Entity("WorshopBase.Models.Owner", b =>
                {
                    b.Property<int>("ownerID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("adress");

                    b.Property<int>("driverLicense");

                    b.Property<string>("fioOwner");

                    b.Property<int>("phone");

                    b.HasKey("ownerID");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("WorshopBase.Models.Workroom", b =>
                {
                    b.Property<int>("workroomID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("carID");

                    b.Property<decimal>("cost");

                    b.Property<int>("mechanicID");

                    b.Property<DateTime>("receiptDate");

                    b.HasKey("workroomID");

                    b.HasIndex("carID");

                    b.HasIndex("mechanicID");

                    b.ToTable("Workrooms");
                });

            modelBuilder.Entity("WorshopBase.Models.Car", b =>
                {
                    b.HasOne("WorshopBase.Models.Owner", "Owner")
                        .WithMany("Cars")
                        .HasForeignKey("ownerID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WorshopBase.Models.Workroom", b =>
                {
                    b.HasOne("WorshopBase.Models.Car", "Car")
                        .WithMany("Workrooms")
                        .HasForeignKey("carID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WorshopBase.Models.Mechanic", "Mechanic")
                        .WithMany("Workrooms")
                        .HasForeignKey("mechanicID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
